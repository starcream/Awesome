最长递增子序列

LeetCode 300

Given an unsorted array of integers, find the length of longest increasing subsequence.

Input: [10,9,2,5,3,7,101,18]
Output: 4 
Explanation: The longest increasing subsequence is [2,3,7,101], therefore the length is 4. 

动态规划 O(n*2)
递推关系:以位置i为结尾的最长子序列,和以位置[0，i-1]为结尾的最长子序列之间的关系

class Solution:
    def lengthOfLIS(self, nums: List[int]) -> int:
        n = len(nums)
        if(n<=1):
            return n
        else:
            p = [0 for i in range(0,n)] # 以i为结尾的最长子序列
            p[0] = 1
            for i in range(1, n):
                for j in range(0, i):
                    if(nums[j]<nums[i]):
                        tmp = p[j] + 1
                    else:
                        tmp = 1
                    if tmp > p[i]:
                        p[i] = tmp
                
            return max(p)
