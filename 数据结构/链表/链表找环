Leetcode 141

Given a linked list, determine if it has a cycle in it.
To represent a cycle in the given linked list, we use an integer pos which 
represents the position (0-indexed) in the linked list where tail connects to.
If pos is -1, then there is no cycle in the linked list.

找一个快指针，一个慢指针，快指针能与慢指针相遇，就说明有环

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool hasCycle(ListNode *head) {
        if(head == NULL)
            return false;
        ListNode* p1= new ListNode(0);   // move at speed 1
        ListNode* p2= new ListNode(0);   // move at speed 2
        p1->next = head;
        p2->next = head;
        while(true)
        {
            if(p1->next == NULL)
                return false;
            else
                p1 = p1->next;
            
            if(p2->next == NULL) 
                return false;
            else{    
                p2 = p2->next;
                if(p2->next == NULL)
                    return false;
                else
                    p2 = p2->next;
            }
            if(p1==p2)
                return true;
        }
    }
};
